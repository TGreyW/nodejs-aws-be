service: productservice

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

  # you can define service wide environment variables here
  environment:
    PG_HOST: storage.c2ljo3yhegym.eu-west-1.rds.amazonaws.com
    PG_PORT: 5432
    PG_DATABASE:
    PG_USERNAME:
    PG_PASSWORD:
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic

  # iam roles here
  iamRoleStatements:
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        Fn::GetAtt: [SQSQueue, Arn]
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: SNSTopic

# functions here
functions:
  getProductList:
    handler: handler.getProductList
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: product
          method: get
          cors: true
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: product
          method: post
          cors: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt: [SQSQueue, Arn]

# you can add CloudFormation resource templates here
resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: catalogItemsTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: Serhii_Temchenko@epam.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
  Outputs:
     SQSUrl:
       Value:
         Ref: SQSQueue
       Export:
         Name: SQSUrl
     SQSArn:
       Value:
         Fn::GetAtt: [SQSQueue, Arn]
       Export:
         Name: SQSArn
